{
  "components": {
    "schemas": {
      "Domicile": {
        "description": "User's domicile",
        "properties": {
          "address": {
            "description": "The address",
            "type": "string"
          },
          "houseNumber": {
            "description": "The number of the house (must be at least 1)",
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "address"
        ],
        "title": "Domicile",
        "type": "object"
      },
      "Rfc7807Error": {
        "description": "A standard RFC-7807 error",
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "error": {
            "description": "Error message",
            "type": "string"
          },
          "extensions": {
            "description": "Additional metadata about the error.",
            "type": "object"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type.",
            "type": "string"
          },
          "type": {
            "description": "A URI reference that identifies the problem type.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ],
        "title": "Rfc7807Error",
        "type": "object"
      }
    },
    "securitySchemes": {
      "securitySchemaName": {
        "description": "API Key for accessing the API",
        "in": "header",
        "name": "x-header-name",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {
      "email": "hello@haim-kastner.com",
      "name": "API Support",
      "url": "https://github/gopher-fleece/gleece/issues"
    },
    "description": "This is an example API for Gleece to demonstrate the API generation and documentation capabilities.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "http://example.com/terms/",
    "title": "Gleece Example API",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/users/domicile/{id}": {
      "get": {
        "description": "Get user's domicile",
        "operationId": "GetUserDomicile",
        "parameters": [
          {
            "description": "The id of the user to get the domicile to",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domicile"
                }
              }
            },
            "description": "The user's domicile"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rfc7807Error"
                }
              }
            },
            "description": "The user not found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rfc7807Error"
                }
              }
            },
            "description": "The error when process failed"
          },
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "securitySchemaName": [
              "read:users"
            ]
          }
        ],
        "summary": "Get user's domicile",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/user/{user_name}/{user_id}": {
      "post": {
        "description": "Create a new user",
        "operationId": "CreateNewUser",
        "parameters": [
          {
            "description": "The user's ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "exclusiveMinimum": true,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The user's email",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The user's name",
            "in": "path",
            "name": "user_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The request origin",
            "in": "header",
            "name": "x-origin",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The trace info",
            "in": "header",
            "name": "trace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the newly created user"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rfc7807Error"
                }
              }
            },
            "description": "The error when process failed"
          },
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "securitySchemaName": [
              "read:users",
              "write:users"
            ]
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ]
}